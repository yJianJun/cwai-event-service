// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "yejianjun",
            "url": "http://www.example.com/support",
            "email": "yejianjun@ideal.sh.cn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/event/page": {
            "post": {
                "description": "根据请求参数从ElasticSearch中分页获取事件。如果请求类型为\"task\"，则会执行事件搜索。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "分页获取事件",
                "parameters": [
                    {
                        "description": "分页请求参数，包括查询类型(queryType)和大小(size)",
                        "name": "pageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "返回分页信息，包括总数(totalCount)、总页数(totalPage)、以及事件数据(data)",
                        "schema": {
                            "$ref": "#/definitions/common.PageVo"
                        }
                    },
                    "400": {
                        "description": "参数绑定失败",
                        "schema": {
                            "$ref": "#/definitions/common.CommonError"
                        }
                    },
                    "404": {
                        "description": "搜索数据失败",
                        "schema": {
                            "$ref": "#/definitions/common.CommonError"
                        }
                    }
                }
            }
        },
        "/event/query/{id}": {
            "get": {
                "description": "通过ID从Elasticsearch中查找和获取事件的信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "查找事件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "事件的唯一标识符",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "返回成功时包含事件数据",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "未找到指定ID的事件",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.CommonError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "common.PageVo": {
            "description": "分页响应结构",
            "type": "object",
            "properties": {
                "data": {
                    "description": "数据\n@json:\"data\""
                },
                "totalCount": {
                    "description": "总条数\n@json:\"totalCount,omitempty\"",
                    "type": "integer"
                },
                "totalPage": {
                    "description": "总页数\n@json:\"totalPage,omitempty\"",
                    "type": "integer"
                }
            }
        },
        "common.Response": {
            "description": "接口响应结构",
            "type": "object",
            "properties": {
                "code": {
                    "description": "响应代码\nExample: 200",
                    "type": "integer"
                },
                "data": {
                    "description": "响应数据"
                },
                "message": {
                    "description": "响应消息\nExample: \"请求成功\"\nomitempty: 可选字段",
                    "type": "string"
                }
            }
        },
        "domain.EventPage": {
            "description": "该结构体用于指定事件分页查询时所需的参数。通过设置这些参数，可以灵活地获取所需的事件数据。",
            "type": "object",
            "required": [
                "page",
                "size"
            ],
            "properties": {
                "end_time": {
                    "description": "EndTime 事件的结束时间，应该晚于或等于 StartTime。\n格式为 \"2006-01-02 15:04:05\"。\nexample: \"2006-01-02 15:04:05\"\nin: query",
                    "type": "string"
                },
                "eventType": {
                    "description": "EventType 指定事件的类型。\n可以选择 \"Critical\", \"Warning\", 或 \"Info\"。\nexample: \"Critical\"\nin: query",
                    "type": "string"
                },
                "keyword": {
                    "description": "Keyword 用于筛选事件的关键词。\n例如可用于指定事件名称、描述中的特定短语。\nrequired: true\nexample: \"连接错误\"\nin: query",
                    "type": "string"
                },
                "nodeName": {
                    "description": "NodeName 节点名称，仅在事件的查询类型为节点时使用。\n对应于节点列表中的 instanceName。\nexample: \"node-01\"\nin: query",
                    "type": "string"
                },
                "page": {
                    "description": "Page 是页码。\nexample: 1\nrequired: true\nin: query",
                    "type": "integer"
                },
                "queryType": {
                    "description": "QueryType 用于指定查询的类型。\n该参数决定是查询节点事件（\"node\"）还是任务事件（\"task\"）。\nrequired: true\nexample: \"node\"\nin: query",
                    "type": "string"
                },
                "regionID": {
                    "description": "RegionID 指定事件所属的区域ID。\n此参数用于限定事件的地理或逻辑区域。\nrequired: true\nexample: \"/central//elasticsearch/\"\nin: query",
                    "type": "string"
                },
                "resourceGroupID": {
                    "description": "ResourceGroupID 指定事件所属资源组的ID。\n用于组织和管理相关事件。\nrequired: true\nexample: \"rg-12345\"\nin: query",
                    "type": "string"
                },
                "size": {
                    "description": "Size 是每页条数。\nexample: 10\nrequired: true\nin: query",
                    "type": "integer"
                },
                "sort": {
                    "description": "Sort 指定排序类型，默认使用事件发生时间倒序。\n可选项，若不指定则使用默认排序。\nexample: false\noptional: true\nin: query",
                    "type": "boolean"
                },
                "start_time": {
                    "description": "StartTime 事件的开始时间。\n格式要求为 \"2006-01-02 15:04:05\"。\nrequired: true\nexample: \"2006-01-02 15:04:05\"\nin: query",
                    "type": "string"
                },
                "taskID": {
                    "description": "TaskID 指定任务的ID，仅在事件的查询类型为任务时为非空。\n仅当查询类型为任务时有效。\nexample: \"task-12345\"\nin: query",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/ctccl",
	Schemes:          []string{},
	Title:            "CTCCL事件监听",
	Description:      "监听CTCCL上报事件服务",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
